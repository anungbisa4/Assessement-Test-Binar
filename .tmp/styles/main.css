/*span{
  padding: 10px;
  background: rgb(215, 215, 215);
  color: red;
}
.class-div{
  margin-top: 50px;
  width: 150px;
  padding: 10px;
  background: rgb(215, 215, 215);
  color: red;
}

.line{
  height: 100px;
  width: 1px;
  background-color: rgb(215, 215, 215);
  margin-left: 40px;
}

.line2{
  height: 100px;
  width: 1px;
  background-color: rgb(215, 215, 215);
  margin-left: 40px;
}*/

/*Now the CSS*/
* {margin: 0; padding: 0;}

.tree ul {
    padding-top: 20px; position: relative;

	transition: all 0.5s;
	-webkit-transition: all 0.5s;
	-moz-transition: all 0.5s;
}

.tree li {
	float: left; text-align: center;
	list-style-type: none;
	position: relative;
	padding: 20px 5px 0 5px;

	transition: all 0.5s;
	-webkit-transition: all 0.5s;
	-moz-transition: all 0.5s;
}

/*We will use ::before and ::after to draw the connectors*/

.tree li::before, .tree li::after{
	content: '';
	position: absolute; top: 0; right: 50%;
	border-top: 1px solid #ccc;
	width: 50%; height: 20px;
}
.tree li::after{
	right: auto; left: 50%;
	border-left: 1px solid #ccc;
}

/*We need to remove left-right connectors from elements without
any siblings*/
.tree li:only-child::after, .tree li:only-child::before {
	display: none;
}

/*Remove space from the top of single children*/
.tree li:only-child{ padding-top: 0;}

/*Remove left connector from first child and
right connector from last child*/
.tree li:first-child::before, .tree li:last-child::after{
	border: 0 none;
}
/*Adding back the vertical connector to the last nodes*/
.tree li:last-child::before{
	border-right: 1px solid #ccc;
	border-radius: 0 5px 0 0;
	-webkit-border-radius: 0 5px 0 0;
	-moz-border-radius: 0 5px 0 0;
}
.tree li:first-child::after{
	border-radius: 5px 0 0 0;
	-webkit-border-radius: 5px 0 0 0;
	-moz-border-radius: 5px 0 0 0;
}

/*Time to add downward connectors from parents*/
.tree ul ul::before{
	content: '';
	position: absolute; top: 0; left: 50%;
	border-left: 1px solid #ccc;
	width: 0; height: 20px;
}

.tree li a{
	border: 1px solid #ccc;
	padding: 5px 10px;
	text-decoration: none;
	color: #666;
	font-family: arial, verdana, tahoma;
	font-size: 11px;
	display: inline-block;

	border-radius: 5px;
	-webkit-border-radius: 5px;
	-moz-border-radius: 5px;

	transition: all 0.5s;
	-webkit-transition: all 0.5s;
	-moz-transition: all 0.5s;
}

/*Time for some hover effects*/
/*We will apply the hover effect the the lineage of the element also*/
.tree li a:hover, .tree li a:hover+ul li a {
	background: red; color: #000; border: 1px solid #94a0b4;
}
/*Connector styles on hover*/
.tree li a:hover+ul li::after,
.tree li a:hover+ul li::before,
.tree li a:hover+ul::before,
.tree li a:hover+ul ul::before{
	border-color:  #94a0b4;
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBeUJHOztBQUVILGVBQWU7QUFDZixHQUFHLFVBQVUsQ0FBQyxXQUFXLENBQUM7O0FBRTFCO0lBQ0ksa0JBQWtCLENBQUMsbUJBQW1COztDQUV6QyxxQkFBcUI7Q0FDckIsNkJBQTZCO0NBQzdCLDBCQUEwQjtDQUMxQjs7QUFFRDtDQUNDLFlBQVksQ0FBQyxtQkFBbUI7Q0FDaEMsc0JBQXNCO0NBQ3RCLG1CQUFtQjtDQUNuQix3QkFBd0I7O0NBRXhCLHFCQUFxQjtDQUNyQiw2QkFBNkI7Q0FDN0IsMEJBQTBCO0NBQzFCOztBQUVELDJEQUEyRDs7QUFFM0Q7Q0FDQyxZQUFZO0NBQ1osbUJBQW1CLENBQUMsT0FBTyxDQUFDLFdBQVc7Q0FDdkMsMkJBQTJCO0NBQzNCLFdBQVcsQ0FBQyxhQUFhO0NBQ3pCO0FBQ0Q7Q0FDQyxZQUFZLENBQUMsVUFBVTtDQUN2Qiw0QkFBNEI7Q0FDNUI7O0FBRUQ7Y0FDYztBQUNkO0NBQ0MsY0FBYztDQUNkOztBQUVELGdEQUFnRDtBQUNoRCxxQkFBcUIsZUFBZSxDQUFDOztBQUVyQztpQ0FDaUM7QUFDakM7Q0FDQyxlQUFlO0NBQ2Y7QUFDRCx3REFBd0Q7QUFDeEQ7Q0FDQyw2QkFBNkI7Q0FDN0IseUJBQXlCO0NBQ3pCLGlDQUFpQztDQUNqQyw4QkFBOEI7Q0FDOUI7QUFDRDtDQUNDLHlCQUF5QjtDQUN6QixpQ0FBaUM7Q0FDakMsOEJBQThCO0NBQzlCOztBQUVELGdEQUFnRDtBQUNoRDtDQUNDLFlBQVk7Q0FDWixtQkFBbUIsQ0FBQyxPQUFPLENBQUMsVUFBVTtDQUN0Qyw0QkFBNEI7Q0FDNUIsU0FBUyxDQUFDLGFBQWE7Q0FDdkI7O0FBRUQ7Q0FDQyx1QkFBdUI7Q0FDdkIsa0JBQWtCO0NBQ2xCLHNCQUFzQjtDQUN0QixZQUFZO0NBQ1osb0NBQW9DO0NBQ3BDLGdCQUFnQjtDQUNoQixzQkFBc0I7O0NBRXRCLG1CQUFtQjtDQUNuQiwyQkFBMkI7Q0FDM0Isd0JBQXdCOztDQUV4QixxQkFBcUI7Q0FDckIsNkJBQTZCO0NBQzdCLDBCQUEwQjtDQUMxQjs7QUFFRCwrQkFBK0I7QUFDL0Isc0VBQXNFO0FBQ3RFO0NBQ0MsZ0JBQWdCLENBQUMsWUFBWSxDQUFDLDBCQUEwQjtDQUN4RDtBQUNELDZCQUE2QjtBQUM3Qjs7OztDQUlDLHVCQUF1QjtDQUN2QiIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qc3BhbntcbiAgcGFkZGluZzogMTBweDtcbiAgYmFja2dyb3VuZDogcmdiKDIxNSwgMjE1LCAyMTUpO1xuICBjb2xvcjogcmVkO1xufVxuLmNsYXNzLWRpdntcbiAgbWFyZ2luLXRvcDogNTBweDtcbiAgd2lkdGg6IDE1MHB4O1xuICBwYWRkaW5nOiAxMHB4O1xuICBiYWNrZ3JvdW5kOiByZ2IoMjE1LCAyMTUsIDIxNSk7XG4gIGNvbG9yOiByZWQ7XG59XG5cbi5saW5le1xuICBoZWlnaHQ6IDEwMHB4O1xuICB3aWR0aDogMXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjE1LCAyMTUsIDIxNSk7XG4gIG1hcmdpbi1sZWZ0OiA0MHB4O1xufVxuXG4ubGluZTJ7XG4gIGhlaWdodDogMTAwcHg7XG4gIHdpZHRoOiAxcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyMTUsIDIxNSwgMjE1KTtcbiAgbWFyZ2luLWxlZnQ6IDQwcHg7XG59Ki9cblxuLypOb3cgdGhlIENTUyovXG4qIHttYXJnaW46IDA7IHBhZGRpbmc6IDA7fVxuXG4udHJlZSB1bCB7XG4gICAgcGFkZGluZy10b3A6IDIwcHg7IHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuXHR0cmFuc2l0aW9uOiBhbGwgMC41cztcblx0LXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC41cztcblx0LW1vei10cmFuc2l0aW9uOiBhbGwgMC41cztcbn1cblxuLnRyZWUgbGkge1xuXHRmbG9hdDogbGVmdDsgdGV4dC1hbGlnbjogY2VudGVyO1xuXHRsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0cGFkZGluZzogMjBweCA1cHggMCA1cHg7XG5cblx0dHJhbnNpdGlvbjogYWxsIDAuNXM7XG5cdC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuNXM7XG5cdC1tb3otdHJhbnNpdGlvbjogYWxsIDAuNXM7XG59XG5cbi8qV2Ugd2lsbCB1c2UgOjpiZWZvcmUgYW5kIDo6YWZ0ZXIgdG8gZHJhdyB0aGUgY29ubmVjdG9ycyovXG5cbi50cmVlIGxpOjpiZWZvcmUsIC50cmVlIGxpOjphZnRlcntcblx0Y29udGVudDogJyc7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTsgdG9wOiAwOyByaWdodDogNTAlO1xuXHRib3JkZXItdG9wOiAxcHggc29saWQgI2NjYztcblx0d2lkdGg6IDUwJTsgaGVpZ2h0OiAyMHB4O1xufVxuLnRyZWUgbGk6OmFmdGVye1xuXHRyaWdodDogYXV0bzsgbGVmdDogNTAlO1xuXHRib3JkZXItbGVmdDogMXB4IHNvbGlkICNjY2M7XG59XG5cbi8qV2UgbmVlZCB0byByZW1vdmUgbGVmdC1yaWdodCBjb25uZWN0b3JzIGZyb20gZWxlbWVudHMgd2l0aG91dFxuYW55IHNpYmxpbmdzKi9cbi50cmVlIGxpOm9ubHktY2hpbGQ6OmFmdGVyLCAudHJlZSBsaTpvbmx5LWNoaWxkOjpiZWZvcmUge1xuXHRkaXNwbGF5OiBub25lO1xufVxuXG4vKlJlbW92ZSBzcGFjZSBmcm9tIHRoZSB0b3Agb2Ygc2luZ2xlIGNoaWxkcmVuKi9cbi50cmVlIGxpOm9ubHktY2hpbGR7IHBhZGRpbmctdG9wOiAwO31cblxuLypSZW1vdmUgbGVmdCBjb25uZWN0b3IgZnJvbSBmaXJzdCBjaGlsZCBhbmRcbnJpZ2h0IGNvbm5lY3RvciBmcm9tIGxhc3QgY2hpbGQqL1xuLnRyZWUgbGk6Zmlyc3QtY2hpbGQ6OmJlZm9yZSwgLnRyZWUgbGk6bGFzdC1jaGlsZDo6YWZ0ZXJ7XG5cdGJvcmRlcjogMCBub25lO1xufVxuLypBZGRpbmcgYmFjayB0aGUgdmVydGljYWwgY29ubmVjdG9yIHRvIHRoZSBsYXN0IG5vZGVzKi9cbi50cmVlIGxpOmxhc3QtY2hpbGQ6OmJlZm9yZXtcblx0Ym9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2NjYztcblx0Ym9yZGVyLXJhZGl1czogMCA1cHggMCAwO1xuXHQtd2Via2l0LWJvcmRlci1yYWRpdXM6IDAgNXB4IDAgMDtcblx0LW1vei1ib3JkZXItcmFkaXVzOiAwIDVweCAwIDA7XG59XG4udHJlZSBsaTpmaXJzdC1jaGlsZDo6YWZ0ZXJ7XG5cdGJvcmRlci1yYWRpdXM6IDVweCAwIDAgMDtcblx0LXdlYmtpdC1ib3JkZXItcmFkaXVzOiA1cHggMCAwIDA7XG5cdC1tb3otYm9yZGVyLXJhZGl1czogNXB4IDAgMCAwO1xufVxuXG4vKlRpbWUgdG8gYWRkIGRvd253YXJkIGNvbm5lY3RvcnMgZnJvbSBwYXJlbnRzKi9cbi50cmVlIHVsIHVsOjpiZWZvcmV7XG5cdGNvbnRlbnQ6ICcnO1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7IHRvcDogMDsgbGVmdDogNTAlO1xuXHRib3JkZXItbGVmdDogMXB4IHNvbGlkICNjY2M7XG5cdHdpZHRoOiAwOyBoZWlnaHQ6IDIwcHg7XG59XG5cbi50cmVlIGxpIGF7XG5cdGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG5cdHBhZGRpbmc6IDVweCAxMHB4O1xuXHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cdGNvbG9yOiAjNjY2O1xuXHRmb250LWZhbWlseTogYXJpYWwsIHZlcmRhbmEsIHRhaG9tYTtcblx0Zm9udC1zaXplOiAxMXB4O1xuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cblx0Ym9yZGVyLXJhZGl1czogNXB4O1xuXHQtd2Via2l0LWJvcmRlci1yYWRpdXM6IDVweDtcblx0LW1vei1ib3JkZXItcmFkaXVzOiA1cHg7XG5cblx0dHJhbnNpdGlvbjogYWxsIDAuNXM7XG5cdC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuNXM7XG5cdC1tb3otdHJhbnNpdGlvbjogYWxsIDAuNXM7XG59XG5cbi8qVGltZSBmb3Igc29tZSBob3ZlciBlZmZlY3RzKi9cbi8qV2Ugd2lsbCBhcHBseSB0aGUgaG92ZXIgZWZmZWN0IHRoZSB0aGUgbGluZWFnZSBvZiB0aGUgZWxlbWVudCBhbHNvKi9cbi50cmVlIGxpIGE6aG92ZXIsIC50cmVlIGxpIGE6aG92ZXIrdWwgbGkgYSB7XG5cdGJhY2tncm91bmQ6IHJlZDsgY29sb3I6ICMwMDA7IGJvcmRlcjogMXB4IHNvbGlkICM5NGEwYjQ7XG59XG4vKkNvbm5lY3RvciBzdHlsZXMgb24gaG92ZXIqL1xuLnRyZWUgbGkgYTpob3Zlcit1bCBsaTo6YWZ0ZXIsXG4udHJlZSBsaSBhOmhvdmVyK3VsIGxpOjpiZWZvcmUsXG4udHJlZSBsaSBhOmhvdmVyK3VsOjpiZWZvcmUsXG4udHJlZSBsaSBhOmhvdmVyK3VsIHVsOjpiZWZvcmV7XG5cdGJvcmRlci1jb2xvcjogICM5NGEwYjQ7XG59XG4iXX0= */